{"version":3,"file":"static/js/401.1ffae659.chunk.js","mappings":"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","sources":["service/socket/index.ts","views/login/index.tsx"],"sourcesContent":["import io from 'socket.io-client'\nlet webSocket: any\n\nexport const createWebsocket = () => {\n  // http://192.168.161.175/\n  // 192.168.1.101\n  webSocket = io('http://localhost:8081', {\n    query: {\n      username: localStorage.getItem('username'),\n    },\n  })\n}\nexport const getWebSocket = () => {\n  if (webSocket === null) {\n    webSocket = io('http://localhost:8081', {\n      query: {\n        username: localStorage.getItem('username'),\n      },\n    })\n  }\n  return webSocket\n}\n","import React, { memo, useCallback, useState } from 'react'\nimport type { ChangeEvent, FC, ReactNode, KeyboardEvent } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useAppDispatch } from '@/store'\nimport { loginRequestMutation } from '@/store/module/user'\n\nimport { createWebsocket } from '@/service/socket'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst Login: FC<IProps> = (props) => {\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n\n  const [username, setUsername] = useState('') //保存用户名username\n  const [password, setPassword] = useState('') //保存密码password\n  /**\n   * 用户名双向数据绑定\n   */\n  const usernameChangeHandler = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setUsername(e.target.value)\n    },\n    [username]\n  )\n  /**\n   * 密码双向数据绑定\n   */\n  const passwordChangeHandler = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setPassword(e.target.value)\n    },\n    [password]\n  )\n  /**\n   * 登录统一操作\n   */\n  const loginHandler = async () => {\n    await dispatch(\n      loginRequestMutation({\n        username,\n        password,\n      })\n    )\n\n    if (localStorage.getItem('token') !== 'null') {\n      navigate('/chat')\n    }\n    createWebsocket() //发起websocket连接\n  }\n  /**\n   * 登录按钮点击事件处理\n   */\n  const buttonClickHandler = useCallback(loginHandler, [username, password])\n  /**\n   * Enter键按下事件处理进行登录\n   */\n  const enterDownHandler = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.code === 'Enter') {\n        loginHandler()\n      }\n    },\n    [username, password]\n  )\n  return (\n    <div className=\"h-full bg-[#F8F8F8]\">\n      {/* login-form-wrapper */}\n      <div className=\"flex justify-center items-center absolute w-[41.0625rem] h-[24.625rem] top-[40%] left-[50%] translate-x-[-50%] translate-y-[-50%] \">\n        <div className=\"flex flex-col  w-[20rem] h-[20.875rem]\">\n          {/* login title */}\n          <div className=\"flex justify-center items-center h-[3.25rem] text-xl \">\n            Login\n          </div>\n          {/* login form */}\n          <div className=\"flex flex-col  h-[17.625rem] p-6 bg-[#ffffff] \">\n            {/* username area */}\n            <div className=\"mb-6 flex flex-col text-sm\">\n              <label htmlFor=\"username\">Username</label>\n              <input\n                type=\"text\"\n                id=\"username\"\n                className=\"w-full h-8 px-3 outline-none bg-[#F8F8F8]\"\n                value={username}\n                onChange={usernameChangeHandler}\n                onKeyDown={enterDownHandler}\n              />\n            </div>\n            {/* password area */}\n            <div className=\"mb-6 text-sm\">\n              <div className=\"flex justify-between\">\n                <label htmlFor=\"password\">Password</label>\n                <button>Forget password?</button>\n              </div>\n              <input\n                type=\"password\"\n                id=\"password\"\n                className=\"w-full h-8 px-3 outline-none bg-[#F8F8F8]\"\n                value={password}\n                onChange={passwordChangeHandler}\n                onKeyDown={enterDownHandler}\n              />\n            </div>\n            {/* login button */}\n            <button\n              className=\" w-full h-[2.125rem] rounded-lg mb-6 bg-[#007AFF] text-[#FFFFFF]\"\n              type=\"submit\"\n              onClick={buttonClickHandler}\n            >\n              Login\n            </button>\n            {/* to register */}\n            <div className=\"flex  text-[13px]\">\n              <div className=\"mr-1\"> Don’t have account?</div>\n              <div className=\"cursor-pointer\">Create new account</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(Login)\n"],"names":["webSocket","createWebsocket","io","query","username","localStorage","getItem","getWebSocket","Login","props","dispatch","useAppDispatch","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","setUsername","_useState3","_useState4","password","setPassword","usernameChangeHandler","useCallback","e","target","value","passwordChangeHandler","loginHandler","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","loginRequestMutation","stop","apply","arguments","buttonClickHandler","enterDownHandler","code","_jsx","className","children","_jsxs","htmlFor","type","id","onChange","onKeyDown","onClick","memo"],"sourceRoot":""}