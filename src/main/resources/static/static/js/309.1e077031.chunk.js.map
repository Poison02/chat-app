{"version":3,"file":"static/js/309.1e077031.chunk.js","mappings":"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","sources":["views/chat/groupChatPage/index.tsx"],"sourcesContent":["import React, { memo, useCallback, useEffect, useState } from 'react'\nimport type { FC, ReactNode, KeyboardEvent, ChangeEvent } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { appShallowEqual, useAppDispatch, useAppSelector } from '@/store'\n\nimport { getWebSocket } from '@/service/socket'\nimport dayjs from 'dayjs'\nimport moreIcon from '@/svg/More Icon.svg'\nimport searchIcon from '@/svg/Search Messages.svg'\nimport callIcon from '@/svg/Call Icon.svg'\nimport emojiIcon from '@/svg/Emoji Icon.svg'\nimport sendIcon from '@/svg/Send Icon.svg'\nimport {\n  addGroupMessage,\n  groupMessageRequestMutation,\n} from '@/store/module/message'\n\ninterface IProps {\n  children?: ReactNode\n}\n\nconst ChatPage: FC<IProps> = (props) => {\n  const dispatch = useAppDispatch()\n  const { chatId } = useParams() // 获取动态路由参数\n  const [message, setMessage] = useState('') //保存消息内容\n  const [currentGroup, setCurrentGroup] = useState<Group>()\n  /**\n   * 从messagestore获取好友列表、群组列表、好友信息记录、群组信息记录\n   */\n  const { groupList, groupMessageList } = useAppSelector((state) => {\n    return {\n      groupList: state.message.groupList,\n      groupMessageList: state.message.groupMessageList,\n    }\n  }, appShallowEqual)\n  let middleGroup: Group\n  useEffect(() => {\n    groupList.forEach((item) => {\n      if (item.groupId == (chatId as any as number)) {\n        middleGroup = item\n      }\n    })\n\n    setCurrentGroup(middleGroup)\n  }, [groupList])\n\n  useEffect(() => {\n    dispatch(groupMessageRequestMutation(chatId as string))\n  }, [chatId])\n\n  useEffect(() => {\n    const webSocket = getWebSocket()\n    webSocket.on('receiveGroupMessageEvent', (message: any) => {\n      dispatch(addGroupMessage(message))\n    })\n  }, [])\n  /**\n   * 输入框双向数据绑定\n   */\n  const changeMessageHandler = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      setMessage(e.target.value)\n    },\n    [message]\n  )\n  /**\n   * 发送信息逻辑统一处理\n   */\n  const sendMessage = () => {\n    const websocket = getWebSocket()\n    const sendTime = new Date().getTime()\n\n    const newMessgae = {\n      groupId: chatId,\n      msgUsername: localStorage.getItem('username') || '',\n      content: message,\n      sendTime: sendTime,\n    }\n    dispatch(\n      addGroupMessage({\n        msgUsername: localStorage.getItem('username') || '',\n        content: message,\n        sendTime: sendTime,\n      })\n    )\n\n    websocket.emit('sendGroupMessageEvent', newMessgae)\n    setMessage('')\n  }\n  /**\n   * 处理键盘Enter发送信息\n   */\n  const enterDownHandler = (e: KeyboardEvent<HTMLDivElement>) => {\n    if (e.code === 'Enter') {\n      sendMessage()\n    }\n  }\n\n  /**\n   * 处理点击发送信息\n   */\n  const clickSendHandler = () => {\n    sendMessage()\n  }\n\n  return (\n    <div className=\"flex flex-col items-center h-full\">\n      {/* 顶部菜单栏 */}\n      <div className=\"flex justify-between w-[57.25rem] h-[3.5rem] px-4 py-1 bg-white\">\n        {/* 左侧用户信息 */}\n        <div className=\"flex items-center w-[46.25rem] \">\n          <img\n            className=\"w-10 h-10 rounded-full mr-4\"\n            src={currentGroup?.groupAvatar}\n          />\n          <div className=\"flex flex-col justify-between\">\n            <div>{currentGroup?.groupName}</div>\n            {/* <div>{currentGroup?.members}</div> */}\n          </div>\n        </div>\n        {/* 右侧菜单栏 */}\n        <div className=\"flex items-center \">\n          <img className=\"w-10 h-10 cursor-pointer\" src={searchIcon} />\n          <img className=\"w-10 h-10 cursor-pointer\" src={callIcon} />\n          <img className=\"w-10 h-10 cursor-pointer\" src={moreIcon} />\n        </div>\n      </div>\n      {/* 聊天区 */}\n      <div className=\" relative w-[43.375rem] h-[41.5rem] bg-transparent\">\n        {/* 聊天信息 */}\n        <div className=\"flex flex-col justify-end h-[36.5rem] pb-4 overflow-auto\">\n          {groupMessageList.map((item, index) => {\n            return (\n              <div\n                className={`flex  w-full mb-4 ${\n                  item.msgUsername === localStorage.getItem('username')\n                    ? 'justify-end '\n                    : 'justify-start'\n                }`}\n                key={index}\n              >\n                <div\n                  className={`flex flex-col max-w-[25.125rem] px-3 py-1 rounded-xl ${\n                    item.msgUsername === localStorage.getItem('username')\n                      ? 'bg-[#78E378]'\n                      : 'bg-white'\n                  }`}\n                >\n                  <div>{item.msgUsername}</div>\n                  <div>{item.content}</div>\n                  <div className=\"flex justify-end mt-1 text-xs\">\n                    {dayjs(item.sendTime).format('YYYY.MM.DD hh.mm')}\n                  </div>\n                </div>\n              </div>\n            )\n          })}\n        </div>\n        {/* 输入框 */}\n        <div\n          className=\"absolute bottom-6 w-full h-14 \"\n          onKeyDown={enterDownHandler}\n        >\n          <img\n            className=\"absolute left-4 top-4 cursor-pointer\"\n            src={emojiIcon}\n          />\n          <input\n            className=\"w-full h-full px-14 py-[1.125rem] rounded-xl bg-white outline-none\"\n            type=\"text\"\n            value={message}\n            onChange={changeMessageHandler}\n          />\n          <img\n            className=\"absolute right-4 top-4 cursor-pointer\"\n            src={sendIcon}\n            onClick={clickSendHandler}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(ChatPage)\n"],"names":["ChatPage","props","middleGroup","dispatch","useAppDispatch","chatId","useParams","_useState","useState","_useState2","_slicedToArray","message","setMessage","_useState3","_useState4","currentGroup","setCurrentGroup","_useAppSelector","useAppSelector","state","groupList","groupMessageList","appShallowEqual","useEffect","forEach","item","groupId","groupMessageRequestMutation","getWebSocket","on","addGroupMessage","changeMessageHandler","useCallback","e","target","value","sendMessage","websocket","sendTime","Date","getTime","newMessgae","msgUsername","localStorage","getItem","content","emit","_jsxs","className","children","_jsx","src","groupAvatar","groupName","searchIcon","callIcon","moreIcon","map","index","concat","dayjs","format","onKeyDown","code","emojiIcon","type","onChange","sendIcon","onClick","memo"],"sourceRoot":""}